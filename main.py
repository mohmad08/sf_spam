import sqlite3
from PyQt5 import QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow

import sys

import pyautogui, time
from PIL import ImageGrab
import random

# db = sqlite3.connect("inventory.db")
# #
# cur = db.cursor()
# #
# cur.execute(""" CREATE TABLE IF NOT EXISTS staff (
# ID_staff integer PRIMARY KEY,
# FullName text not null
# )""")
# #
# cur.execute(""" CREATE TABLE IF NOT EXISTS auditorium (
# ID_auditorium integer PRIMARY KEY,
# ID_staff integer,
# FOREIGN KEY (ID_staff) REFERENCES staff (ID_staff)
# )""")
# #
# cur.execute("""CREATE TABLE IF NOT EXISTS device (
# ID_device integer PRIMARY KEY,
# name_device text not null
# )""")
# #
# cur.execute("""CREATE TABLE IF NOT EXISTS inventory(
# ID_inventory integer PRIMARY KEY,
# ID_auditorium integer,
# ID_device integer,
# inventory_number integer,
# notes text,
# FOREIGN KEY (ID_auditorium) REFERENCES auditorium (ID_auditorium),
# FOREIGN KEY (ID_device) REFERENCES device (ID_device)
# )""")
# #
# db.commit()
# db.close()
# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'test.ui'
#
# Created by: PyQt5 UI code generator 5.15.10
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets

class Ui_Sferum(object):
    def setupUi(self, Sferum):
        Sferum.setObjectName("Sferum")
        Sferum.resize(400, 584)
        self.centralwidget = QtWidgets.QWidget(Sferum)
        self.centralwidget.setStyleSheet("\n"
"color: rgb(255, 255, 255);")
        self.centralwidget.setObjectName("centralwidget")
        self.label = QtWidgets.QLabel(self.centralwidget)
        self.label.setGeometry(QtCore.QRect(20, 10, 361, 91))
        font = QtGui.QFont()
        font.setFamily("Arial")
        font.setPointSize(10)
        self.label.setFont(font)
        self.label.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label.setStyleSheet("background-color: rgb(181, 181, 181);\n"
"border-color: qlineargradient(spread:pad, x1:0, y1:0, x2:1, y2:0, stop:0 rgba(0, 0, 0, 255), stop:1 rgba(255, 255, 255, 255));\n"
"border-color: rgb(2, 2, 2);\n"
"color: rgb(0, 0, 0);")
        self.label.setTextFormat(QtCore.Qt.AutoText)
        self.label.setObjectName("label")
        self.Button_Start = QtWidgets.QPushButton(self.centralwidget)
        self.Button_Start.setGeometry(QtCore.QRect(130, 120, 131, 51))
        self.Button_Start.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(135, 135, 135);")
        self.Button_Start.setObjectName("Button_Start")
        self.Button_Stop = QtWidgets.QPushButton(self.centralwidget)
        self.Button_Stop.setGeometry(QtCore.QRect(130, 180, 131, 51))
        self.Button_Stop.setStyleSheet("border-color: rgb(0, 0, 0);\n"
"background-color: rgb(135, 135, 135);")
        self.Button_Stop.setObjectName("Button_Stop")
        self.label_2 = QtWidgets.QLabel(self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(20, 260, 361, 291))
        self.label_2.setStyleSheet("background-color: rgb(0, 0, 0);")
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")
        Sferum.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(Sferum)
        self.statusbar.setObjectName("statusbar")
        Sferum.setStatusBar(self.statusbar)

        self.retranslateUi(Sferum)
        QtCore.QMetaObject.connectSlotsByName(Sferum)

        self.add_fun()


    def retranslateUi(self, Sferum):
        _translate = QtCore.QCoreApplication.translate
        Sferum.setWindowTitle(_translate("Sferum", "MainWindow"))
        self.label.setText(_translate("Sferum", "<html><head/><body><p align=\"center\"><span style=\" font-size:12pt;\">Переключите раскладку клавиатуры </span></p><p align=\"center\"><span style=\" font-size:12pt;\">на английский </span></p><p align=\"center\"><span style=\" font-size:12pt;\">и нажмите кнопку пуск.</span></p></body></html>"))
        self.Button_Start.setText(_translate("Sferum", "Start"))
        self.Button_Stop.setText(_translate("Sferum", "Stop"))

    def startBtn(self):
        print('Start')
        array = ['a', 'n', 'y', ' ', 'f', 'o', 'r', 'd', 'q', 'w', 'y','a', 'n', 'y', ' ', 'f', 'o', 'r', 'd', 'q', 'w', 'y']
        time.sleep(3)
        self.k = 0
        screenshot = ImageGrab.grab()
        fal = screenshot.getpixel((882, 517))
        while True:
            screenshot = ImageGrab.grab()
            if screenshot.getpixel((882, 517)) != fal:
                self.textint("Вылезла капча, на количестве: ", self.k)
                break
            number = random.randint(5, 20)
            self.text = ''
            for i in range(0, 10):
                self.text += random.choice(array)
            pyautogui.write(self.text)
            pyautogui.press('enter')
            self.k += 1
            self.write_country()
            print('Количество сообщений: ', k)
            time.sleep(number)


    def write_country(self):
        # print(self.k)
        self.label_2.setText(self.k)

    def add_fun(self):
        self.Button_Start.clicked.connect(lambda: self.startBtn())



if __name__ == "__main__":

    import sys
    app = QtWidgets.QApplication(sys.argv)
    Sferum = QtWidgets.QMainWindow()
    ui = Ui_Sferum()
    ui.setupUi(Sferum)
    Sferum.show()
    sys.exit(app.exec_())












# fal = (43, 45, 48)
# screenshot = ImageGrab.grab()
# if screenshot.getpixel((-799, 1244)) == fal:
#     break

# time.sleep(3)
# x, y = pyautogui.position()
# print(x,y)
#
# pyautogui.moveTo(1125, 595, 3)
# screenshot = ImageGrab.grab()
# pixel_color = screenshot.getpixel((1125, 595))
#
# print(pixel_color)